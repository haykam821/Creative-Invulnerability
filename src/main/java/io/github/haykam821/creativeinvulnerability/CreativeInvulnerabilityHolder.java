package io.github.haykam821.creativeinvulnerability;

import com.mojang.brigadier.exceptions.CommandSyntaxException;
import com.mojang.brigadier.exceptions.SimpleCommandExceptionType;

import net.minecraft.server.command.ServerCommandSource;
import net.minecraft.text.TranslatableText;

public interface CreativeInvulnerabilityHolder {
	public static final boolean DEFAULT_RESPECT = true;

	public static final SimpleCommandExceptionType NO_HOLDER_EXCEPTION = new SimpleCommandExceptionType(new TranslatableText("text.creativeinvulnerability.no_holder"));

	/**
	 * @return {@code true} if entities should be invulnerable even in creative mode
	 */
	public boolean shouldRespectCreativeInvulnerability();

	public void setRespectCreativeInvulnerability(boolean respectCreativeInvulnerability);

	/**
	 * @return the casted object, or {@code null} if it does not implement the interface
	 */
	public static CreativeInvulnerabilityHolder ofNullable(Object object) {
		if (object instanceof CreativeInvulnerabilityHolder) {
			return (CreativeInvulnerabilityHolder) object;
		}
		return null;
	}

	public static CreativeInvulnerabilityHolder ofSource(ServerCommandSource source) throws CommandSyntaxException {
		CreativeInvulnerabilityHolder holder = CreativeInvulnerabilityHolder.ofNullable(source.getEntityOrThrow());
		if (holder == null) {
			throw NO_HOLDER_EXCEPTION.create();
		}

		return holder;
	}
}
