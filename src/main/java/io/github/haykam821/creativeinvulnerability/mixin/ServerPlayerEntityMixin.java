package io.github.haykam821.creativeinvulnerability.mixin;

import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Unique;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

import io.github.haykam821.creativeinvulnerability.CreativeInvulnerabilityHolder;
import net.minecraft.server.network.ServerPlayerEntity;

@Mixin(ServerPlayerEntity.class)
public class ServerPlayerEntityMixin implements CreativeInvulnerabilityHolder {
	@Unique
	private boolean respectCreativeInvulnerability = CreativeInvulnerabilityHolder.DEFAULT_RESPECT;

	@Override
	public boolean shouldRespectCreativeInvulnerability() {
		return this.respectCreativeInvulnerability;
	}

	@Override
	public void setRespectCreativeInvulnerability(boolean respectCreativeInvulnerability) {
		this.respectCreativeInvulnerability = respectCreativeInvulnerability;
	}

	@Inject(method = "copyFrom", at = @At("TAIL"))
	private void copyFrom(ServerPlayerEntity oldPlayer, boolean alive, CallbackInfo ci) {
		CreativeInvulnerabilityHolder oldHolder = (CreativeInvulnerabilityHolder) oldPlayer;
		this.setRespectCreativeInvulnerability(oldHolder.shouldRespectCreativeInvulnerability());
	}
}
